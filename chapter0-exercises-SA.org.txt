# Created 2016-01-15 Fri 13:10
#+OPTIONS: H:4 num:nil toc:nil \n:nil @:t ::t |:t ^:t *:t TeX:t LaTeX:t
#+TITLE: Chapter 0 Exercises Self-Assessment
#+AUTHOR: <Your Name>
#+LANGUAGE: en
#+STARTUP: showeverything

* Exemplary Answers

** Exercise 7

Many answers are possible --- give yourself credit if yours is one of them.
(The underlying set is \({\cal N}\) in these examples.)

a. Let \(R\) be the /within 1/ relation, that is, \(R = \{(a, b) \mid\ \mid a - b \mid\ \le 1\}\).

b. Let \(R\) be the /less than or equal to/ relation, that is, \(R = \{ (a, b) \mid\ a \le b\}\).

c. Finding \(R\) that is symmetric and transitive but not reflexive is tricky because
   of the following "near proof" that \(R\) cannot exist! Assume that \(R\) is symmetric and transitive
   and choose any member \(x\) in the underlying set. Pick any other member \(y\) in the underlying set
   for which \((x, y) \in R\). Then \((y, x) \in R\) because \(R\) is symmetric and so \((x, x) \in R\)
   because \(R\) is transitive, hence \(R\) is reflexive. This argument fails to be an actual proof
   because \(y\) may fail to exist for \(x\).

Let \(R\) be the /neither side is 1/ relation, \(R = \{(a, b) \mid\ a \ne 1\ \land b \ne 1\}\).

** Problem 11

The error occurs in the last sentence. If \(H\) contains at least 3 horses, \(H_1\) and \(H_2\) contain
a horse in common, so the argument works properly. But, if \(H\) contains exactly 2 horses, then
\(H_1\) and \(H_2\) each have exactly 1 horse, but do not have a horse in common. Hence we cannot
conclude that the horse in \(H_1\) has the same color as the horse in \(H_2\). So the 2 horses in \(H\)
may not be colored the same.

** Problem 12

Let \(G\) by any graph with \(n\) nodes where \(n \ge 2\). The degree of every node in \(G\) is one of the
\(n\) possible values from \(0\) to \(n - 1\). It would be nice to use the /pigeonhole principle/ to
show that two of these values must be the same, but the number of possible values is one too great
for that. However, not all of the values can occur in the same graph, because a node of degree 0
cannot coexist with a node of degree \(n - 1\). Hence \(G\) can exhibit at most \(n - 1\) degree values
among its \(n\) nodes, so two of the values must be the same.

* What Is True?

This is a tool that allows you to quantify how engaged you feel you
were while doing these exercises.

Use this scale to score your agreement with the assertions in the function below
that uses a string as the first element, and a number 0-5 as the second element
of each vector in this vector of vectors:

| 5 | = | complete or total agreement   |
| 4 | = | not quite total agreement     |
| 3 | = | middling agreement            |
| 2 | = | some agreement                |
| 1 | = | piddling agreement            |
| 0 | = | none, no agreement whatsoever |

#+BEGIN_SRC emacs-lisp
  (defun what-is-true-about-my-engagement-with-chapter0-exercises ()
    (vector
     ["I did all 6 assigned book exercises/problems (2, 3, 5, 7, 11 and 12)." 0]
     ["I remembered the counting principle called the pigeonhole principle and used it in the graph problem." 0]
     ["I looked at and tried proving each of the six Proof Problems (from Easiest to Hardest)." 0]
     ["I understand the different approaches to proving/disproving a claim." 0]
     ["I understand Sipser's proof idea approach (explain the idea behind a proof in general terms before actually giving the proof proper)." 0]
  ))
#+END_SRC
